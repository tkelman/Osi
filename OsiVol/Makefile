# Static or shared libraries should be built (STATIC or SHARED)?
LibType := SHARED

# Select optimization (-O or -g). -O will be automatically bumped up to the 
# highest level of optimization the compiler supports. If want something in
# between then specify the exact level you want, e.g., -O1 or -O2
OptLevel := -O

LIBNAME := OsiVol

LIBSRC :=
LIBSRC += OsiVolSolverInterface.cpp
LIBSRC += OsiVolSolverInterfaceIO.cpp

##############################################################################
# You should not need to edit below this line.
##############################################################################

# The location of the customized Makefiles
export MakefileDir := $(CoinDir)/Common/make
include ${MakefileDir}/Makefile.coin
include ${MakefileDir}/Makefile.location

OsiIncDir := $(CoinDir)/include
OsiLibDir := $(CoinDir)/lib

export ExtraIncDir := ${VolIncDir} ${OsiIncDir}
export ExtraLibDir := ${VolLibDir} ${OsiLibDir}
export ExtraLibName := ${VolLibName} ${OsiLibName}
export ExtraDefine := ${VolDefine}

export LibType OptLevel LIBNAME LIBSRC

# Until there's an OsiMpsWriter class we need to play this hocus-pocus

ifeq ($(findstring libOsiOsl,${SOLVERLIBS}),libOsiOsl)
    ExtraDefine += COIN_USE_OSL
endif
ifeq ($(findstring libOsiCpx,${SOLVERLIBS}),libOsiCpx)
    ExtraDefine += COIN_USE_CPX
endif
ifeq ($(findstring libOsiXpr,${SOLVERLIBS}),libOsiXpr)
    ExtraDefine += COIN_USE_XPR
endif
ifeq ($(findstring libOsiSpx,${SOLVERLIBS}),libOsiSpx)
    ExtraDefine += COIN_USE_SPX
endif

###############################################################################

.DELETE_ON_ERROR:

.PHONY: default install libosi library clean doc

default: install

install library : % :
	(cd $(CoinDir)/Vol && $(MAKE) install)
	(cd $(CoinDir)/Osi && $(MAKE) -f Makefile.Osi install)
	$(MAKE) -f ${MakefileDir}/Makefile.lib $*

libOsiVol :
	(cd $(CoinDir)/Osi && $(MAKE) libOsi)
	$(MAKE) -f ${MakefileDir}/Makefile.lib $*

clean doc : % :
	$(MAKE) -f ${MakefileDir}/Makefile.lib $*
